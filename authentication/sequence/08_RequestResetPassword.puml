@startuml
actor Guest as User
participant "Request reset password UI" as UI <<UI>>
participant AuthenticationEndpoints <<Controller>>
participant RequestPasswordResetHandler <<Handler>>
participant IdentityService <<Service>>
participant UserManager <<Service>>
participant EmailService <<Service>>
participant Database

note right of RequestPasswordResetHandler
  Managed by MediatR
end note

note right of IdentityService
  Managed by IoC
end note

note right of UserManager
  Managed by IoC
end note

note right of EmailService
  Managed by IoC
end note

User -> UI : Enter email and click "Send password reset code"
activate UI
UI -> AuthenticationEndpoints : POST /api/Authentication/RequestPasswordReset
activate AuthenticationEndpoints
AuthenticationEndpoints -> RequestPasswordResetHandler : Send RequestPasswordResetCommand
deactivate AuthenticationEndpoints
activate RequestPasswordResetHandler
RequestPasswordResetHandler -> IdentityService : RequestPasswordResetAsync(email)
deactivate RequestPasswordResetHandler
activate IdentityService
IdentityService -> UserManager : FindByEmailAsync(email)
deactivate IdentityService
activate UserManager
UserManager -> Database : Query UserAccount
deactivate UserManager
activate Database
Database --> UserManager : UserAccount/null
deactivate Database
activate UserManager
UserManager --> IdentityService : UserAccount/null
deactivate UserManager
activate IdentityService
alt User not found
    IdentityService --> RequestPasswordResetHandler : Error: ACCOUNT_NOTFOUND
    deactivate IdentityService
    activate RequestPasswordResetHandler
    RequestPasswordResetHandler --> AuthenticationEndpoints : Error (ACCOUNT_NOTFOUND)
    deactivate RequestPasswordResetHandler
    activate AuthenticationEndpoints
    AuthenticationEndpoints --> UI : 400 Bad Request { "error": "ACCOUNT_NOTFOUND" }
    deactivate AuthenticationEndpoints
    UI -> User : Display error: Account not found
else User found
    activate IdentityService
    IdentityService -> IdentityService : Check lockout status
    alt Too many reset requests
        IdentityService --> RequestPasswordResetHandler : Error: PASSWORD_RESET_REQUEST_TOO_MANY
        deactivate IdentityService
        activate RequestPasswordResetHandler
        RequestPasswordResetHandler --> AuthenticationEndpoints : Error (PASSWORD_RESET_REQUEST_TOO_MANY)
        deactivate RequestPasswordResetHandler
        activate AuthenticationEndpoints
        AuthenticationEndpoints --> UI : 400 Bad Request { "error": "PASSWORD_RESET_REQUEST_TOO_MANY" }
        deactivate AuthenticationEndpoints
        UI -> User : Display error: Too many reset requests
    else Allowed to send
        activate IdentityService
        IdentityService -> IdentityService : Generate verification code
        IdentityService -> UserManager : UpdateAsync(user)
        deactivate IdentityService
        activate UserManager
        UserManager -> Database : Update UserAccount
        deactivate UserManager
        activate Database
        Database --> UserManager : Success
        deactivate Database
        activate UserManager
        UserManager --> IdentityService : Success
        deactivate UserManager
        activate IdentityService
        IdentityService -> EmailService : SendEmailAsync(email, subject, body)
        deactivate IdentityService
        activate EmailService
        EmailService --> IdentityService : Success
        deactivate EmailService
        activate IdentityService
        IdentityService --> RequestPasswordResetHandler : Success
        deactivate IdentityService
        activate RequestPasswordResetHandler
        RequestPasswordResetHandler --> AuthenticationEndpoints : Success
        deactivate RequestPasswordResetHandler
        activate AuthenticationEndpoints
        AuthenticationEndpoints --> UI : 200 OK { "message": "Password reset code sent" }
        deactivate AuthenticationEndpoints
        UI -> User : Display info: Password reset code sent
    end
end

@enduml