@startuml
actor User
participant "Set password UI" as UI
participant AuthenticationEndpoints
participant SetPasswordHandler
participant IdentityService
participant UserManager
Database Database

User -> UI : Enter new password and click "Set Password"
activate UI
UI -> AuthenticationEndpoints : POST /api/Authentication/SetPassword
activate AuthenticationEndpoints
AuthenticationEndpoints -> SetPasswordHandler : Send SetPasswordCommand
activate SetPasswordHandler
SetPasswordHandler -> IdentityService : TrySetPasswordAsync(userId, password)
activate IdentityService
IdentityService -> UserManager : FindByIdAsync(userId)
activate UserManager
UserManager -> Database : Query UserAccount by Id
activate Database
Database --> UserManager : UserAccount/null
    UserManager --> IdentityService : UserAccount/null

deactivate Database
    deactivate UserManager

alt User not found
    deactivate UserManager
    IdentityService --> SetPasswordHandler : Error: ACCOUNT_NOTFOUND
    SetPasswordHandler --> AuthenticationEndpoints : Error (ACCOUNT_NOTFOUND)
    AuthenticationEndpoints --> UI : 400 Bad Request (ACCOUNT_NOTFOUND)
    UI -> User : Error message: Account not found
else User found
    IdentityService -> UserManager : HasPasswordAsync(user)
    activate UserManager
    UserManager -> IdentityService: true/false
    deactivate UserManager
    alt User already has password
        UserManager --> IdentityService : Error: ACCOUNT_ALREADY_HAS_PASSWORD
        
        IdentityService --> SetPasswordHandler : Error: ACCOUNT_ALREADY_HAS_PASSWORD
        SetPasswordHandler --> AuthenticationEndpoints : Error (ACCOUNT_ALREADY_HAS_PASSWORD)
        AuthenticationEndpoints --> UI : 400 Bad Request (ACCOUNT_ALREADY_HAS_PASSWORD)
        UI -> User : Error message: Account already has a password
    else User has no password
        IdentityService -> UserManager : GeneratePasswordResetTokenAsync(user)
        activate UserManager
        UserManager --> IdentityService : Token
        IdentityService -> UserManager : ResetPasswordAsync(user, token, password)
        UserManager -> Database : Update UserAccount password
        activate Database
        Database --> UserManager : Success
        deactivate Database
        UserManager --> IdentityService : Success
        deactivate UserManager
        IdentityService --> SetPasswordHandler : Success
        SetPasswordHandler --> AuthenticationEndpoints : Success
        AuthenticationEndpoints --> UI : 200 OK
        UI -> User : Success message: Password has been set
    end
end
deactivate IdentityService
deactivate SetPasswordHandler
deactivate AuthenticationEndpoints
deactivate UI
@enduml