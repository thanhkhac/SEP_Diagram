@startuml
actor User
participant "Set password UI" as UI <<UI>>
participant AuthenticationEndpoints <<Controller>>
participant SetPasswordHandler <<Handler>>
participant IdentityService <<Service>>
participant UserManager <<Service>>
participant Database

note right of SetPasswordHandler
  Managed by MediatR
end note

note right of IdentityService
  Managed by IoC
end note

note right of UserManager
  Managed by IoC
end note

User -> UI : Enter new password and click "Set Password"
activate UI
UI -> AuthenticationEndpoints : POST /api/Authentication/SetPassword
activate AuthenticationEndpoints
AuthenticationEndpoints -> SetPasswordHandler : Send SetPasswordCommand
deactivate AuthenticationEndpoints
activate SetPasswordHandler
SetPasswordHandler -> IdentityService : TrySetPasswordAsync(userId, password)
deactivate SetPasswordHandler
activate IdentityService
IdentityService -> UserManager : FindByIdAsync(userId)
deactivate IdentityService
activate UserManager
UserManager -> Database : Query UserAccount by Id
deactivate UserManager
activate Database
Database --> UserManager : UserAccount/null
deactivate Database
activate UserManager
UserManager --> IdentityService : UserAccount/null
deactivate UserManager
activate IdentityService
alt User not found
    IdentityService --> SetPasswordHandler : Error: ACCOUNT_NOTFOUND
    deactivate IdentityService
    activate SetPasswordHandler
    SetPasswordHandler --> AuthenticationEndpoints : Error (ACCOUNT_NOTFOUND)
    deactivate SetPasswordHandler
    activate AuthenticationEndpoints
    AuthenticationEndpoints --> UI : 400 Bad Request { "error": "ACCOUNT_NOTFOUND" }
    deactivate AuthenticationEndpoints
    UI -> User : Display error: Account not found
else User found
    activate IdentityService
    IdentityService -> UserManager : HasPasswordAsync(user)
    deactivate IdentityService
    activate UserManager
    UserManager --> IdentityService : true/false
    deactivate UserManager
    activate IdentityService
    alt User already has password
        IdentityService --> SetPasswordHandler : Error: ACCOUNT_ALREADY_HAS_PASSWORD
        deactivate IdentityService
        activate SetPasswordHandler
        SetPasswordHandler --> AuthenticationEndpoints : Error (ACCOUNT_ALREADY_HAS_PASSWORD)
        deactivate SetPasswordHandler
        activate AuthenticationEndpoints
        AuthenticationEndpoints --> UI : 400 Bad Request { "error": "ACCOUNT_ALREADY_HAS_PASSWORD" }
        deactivate AuthenticationEndpoints
        UI -> User : Display error: Account already has a password
    else User has no password
        activate IdentityService
        IdentityService -> UserManager : GeneratePasswordResetTokenAsync(user)
        deactivate IdentityService
        activate UserManager
        UserManager --> IdentityService : Token
        deactivate UserManager
        activate IdentityService
        IdentityService -> UserManager : ResetPasswordAsync(user, token, password)
        deactivate IdentityService
        activate UserManager
        UserManager -> Database : Update UserAccount password
        deactivate UserManager
        activate Database
        Database --> UserManager : Success
        deactivate Database
        activate UserManager
        UserManager --> IdentityService : Success
        deactivate UserManager
        activate IdentityService
        IdentityService --> SetPasswordHandler : Success
        deactivate IdentityService
        activate SetPasswordHandler
        SetPasswordHandler --> AuthenticationEndpoints : Success
        deactivate SetPasswordHandler
        activate AuthenticationEndpoints
        AuthenticationEndpoints --> UI : 200 OK { "message": "Password has been set" }
        deactivate AuthenticationEndpoints
        UI -> User : Display info: Password has been set
    end
end

@enduml