@startuml
actor User
participant "Test Result UI" as UI
participant TestEndpoints
participant GetTestResultOfClassQueryHandler as Handler
participant TestService
participant ApplicationDbContext
participant Database

User -> UI : View test results for class
activate UI
UI -> TestEndpoints : GET /api/Test/{TestId}/Results?studentName=...&isPassed=...
activate TestEndpoints
TestEndpoints -> Handler : Handle(GetTestResultOfClassQuery)
activate Handler
Handler -> ApplicationDbContext : Query Test by TestId
activate ApplicationDbContext
ApplicationDbContext -> Database : Query Test
activate Database
Database --> ApplicationDbContext : Test
deactivate Database
ApplicationDbContext --> Handler : Test
deactivate ApplicationDbContext
alt Test Not Found
    Handler --> TestEndpoints : Error: TEST_NOT_FOUND
    TestEndpoints --> UI : 400 Bad Request (errorCode: TEST_NOT_FOUND)
    UI -> User : Error: Test not found
else Test Found
    Handler -> TestService : CanViewOrEditTest(classId)
    activate TestService
    TestService -> ApplicationDbContext : Query Permission
    activate ApplicationDbContext
    ApplicationDbContext -> Database : Query Permission
    activate Database
    Database --> ApplicationDbContext : Permission
    deactivate Database
    ApplicationDbContext --> TestService : Permission
    deactivate ApplicationDbContext
    TestService --> Handler : bool
    deactivate TestService
    alt No permission
        Handler --> TestEndpoints : Error: USER_NOT_HAVE_PERMISSION_IN_TEST
        TestEndpoints --> UI : 400 Bad Request (errorCode: USER_NOT_HAVE_PERMISSION_IN_TEST)
        UI -> User : Error: User does not have permission to view results
    else Allowed
        Handler -> ApplicationDbContext : Calculate Total Score for Test
        activate ApplicationDbContext
        ApplicationDbContext -> Database : Query TestVersionQuestions, Question
        activate Database
        Database --> ApplicationDbContext : List<TestVersionQuestion>, List<Question>
        deactivate Database
        ApplicationDbContext --> Handler : Total Score
        deactivate ApplicationDbContext
        Handler -> ApplicationDbContext : Query TestGrades (Include User, Test)
        activate ApplicationDbContext
        ApplicationDbContext -> Database : Query TestGrades, User, Test
        activate Database
        Database --> ApplicationDbContext : List<TestGrade>, User, Test
        deactivate Database
        ApplicationDbContext --> Handler : List<ResultTestOfClassDto>
        deactivate ApplicationDbContext
        Handler -> Handler : Filter by StudentName and IsPassed
        Handler --> TestEndpoints : PaginatedList<ResultTestOfClassDto>
        TestEndpoints --> UI : 200 OK (ApiResponse<PaginatedList<ResultTestOfClassDto>>)
        UI -> User : Show test results for class
    end
end
deactivate Handler
deactivate TestEndpoints
deactivate UI
@enduml