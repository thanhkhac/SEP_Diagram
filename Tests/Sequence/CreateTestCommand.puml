@startuml
actor User
participant "Create Test UI" as UI
participant TestEndpoints
participant CreateTestCommandHandler as Handler
participant TestService
participant PlanService
participant ApplicationDbContext
participant Database

User -> UI : Fill in info, add questions, click "Create"
UI -> TestEndpoints : POST /api/Test
TestEndpoints -> Handler : Handle(CreateTestCommand)
Handler -> ApplicationDbContext : Query Class by ClassId
ApplicationDbContext -> Database : Query Class
Database --> ApplicationDbContext : Class
ApplicationDbContext --> Handler : Class
alt Class Not Found
    Handler --> TestEndpoints : Error: CLASS_NOTFOUND
    TestEndpoints --> UI : 400 Bad Request (errorCode: CLASS_NOTFOUND)
    UI -> User : Error: Class not found
else Class Found
    Handler -> PlanService : CanOpenTest(userId)
    PlanService -> ApplicationDbContext : Query UserSubscription
    ApplicationDbContext -> Database : Query UserSubscription
    Database --> ApplicationDbContext : List<UserSubscription>
    ApplicationDbContext --> PlanService : List<UserSubscription>
    PlanService --> Handler : bool
    alt Plan Required
        Handler --> TestEndpoints : Error: PLAN_REQUIRE_PLAN
        TestEndpoints --> UI : 400 Bad Request (errorCode: PLAN_REQUIRE_PLAN)
        UI -> User : Error: Please buy a plan
    else Plan Available
        Handler -> TestService : CanCreateTest(classId)
        TestService -> ApplicationDbContext : Query Permission
        ApplicationDbContext -> Database : Query Permission
        Database --> ApplicationDbContext : Permission
        ApplicationDbContext --> TestService : Permission
        TestService --> Handler : bool
        alt No permission
            Handler --> TestEndpoints : Error: NOT_FOUND_TEACHER_OR_OWNER_IN_CLASS
            TestEndpoints --> UI : 400 Bad Request (errorCode: NOT_FOUND_TEACHER_OR_OWNER_IN_CLASS)
            UI -> User : Error: Not lecturer or owner of class
        else Allowed
            alt Number of Questions Exceeds Limit ( > 100)
                Handler --> TestEndpoints : Error: NUMBER_OF_QUESTION_EXCEED_LIMIT
                TestEndpoints --> UI : 400 Bad Request (errorCode: NUMBER_OF_QUESTION_EXCEED_LIMIT)
                UI -> User : Error: Number of questions exceeds limit (max 100)
            else Number of Questions within Limit
                Handler -> TestService : QuestionAccessAndCompareForTest(questions)
                TestService -> ApplicationDbContext : Query Questions/Permissions (inferred)
                ApplicationDbContext -> Database : Query Questions/Permissions (inferred)
                Database --> ApplicationDbContext : Questions/Permissions (inferred)
                ApplicationDbContext --> TestService : Questions/Permissions (inferred)
                TestService --> Handler : List<Guid> (validQuestionIds)
                alt Question Access Denied
                    Handler --> TestEndpoints : Error: QUESTION_NOT_HAVE_ACCESS
                    TestEndpoints --> UI : 400 Bad Request (errorCode: QUESTION_NOT_HAVE_ACCESS)
                    UI -> User : Error: Some questions are not accessible or invalid
                else Question Access Granted
                    Handler -> ApplicationDbContext : Add new Test, TestVersions, Questions, TestVersionQuestions
                    ApplicationDbContext -> Database : Insert Test, TestVersions, Questions, TestVersionQuestions
                    Database --> ApplicationDbContext : Success
                    ApplicationDbContext --> Handler : Guid
                    Handler --> TestEndpoints : Guid
                    TestEndpoints --> UI : 200 OK (ApiResponse<Guid>)
                    UI -> User : Info: Test created successfully
                end
            end
        end
    end
end
@enduml