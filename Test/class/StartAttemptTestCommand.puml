@startuml

'=====================DEFINE========================
!define TEST_SERVICE_TRYCHECKCANATTEMPTTEST
'=====================IMPORT========================
!include ../../GlobalSettings.puml
!include ../../common/Mediatr.puml
!include ../../common/EndpointClasses.puml
!include ../../common/IApplicationDbContext.puml
!include ../Service/ITestService.puml
!include ../../common/service/IUser.puml
!include ../../common/service/IHangFireService.puml
!include ../Dto/AttemptDetailDto.puml
!include ../Dto/QuestionAttemptDetailDto.puml
'=====================COMMAND========================
class StartAttemptTestCommand {
    + TestId : Guid
}

class StartAttemptTestCommandHandler {
    -  _context : IApplicationDbContext
    -  _testService : ITestService
    -  _user : IUser
    -  _hangFireService : IHangFireService
    + StartAttemptTestCommandHandler(context:IApplicationDbContext, testService:ITestService, user:IUser, hangFireService:IHangFireService)
    +  Handle(request:StartAttemptTestCommand, cancellationToken:CancellationToken) : Task<AttemptDetailDto>
}

'=====================ENDPOINT========================
class TestEndpoints  {
    +  StartAttemptTestTestAttempt(testId:Guid, sender:ISender) : Task<Ok<ApiResponse<AttemptDetailDto>>>
}
'=====================RELATIONSHIP========================
!include zCommon.puml
StartAttemptTestCommand ..|> IRequest : <<implements>>
StartAttemptTestCommandHandler ..> StartAttemptTestCommand :  <<uses>>
TestEndpoints ..> StartAttemptTestCommand : <<uses>>
StartAttemptTestCommandHandler ..|> IRequestHandler : <<implements>>
StartAttemptTestCommandHandler ..> AttemptDetailDto : <<uses>>
StartAttemptTestCommandHandler ..> QuestionAttemptDetailDto : <<uses>>

'=====INJECT
StartAttemptTestCommandHandler ..> IApplicationDbContext : <<inject>>
StartAttemptTestCommandHandler ..> ITestService : <<inject>>
StartAttemptTestCommandHandler ..> IUser : <<inject>>
StartAttemptTestCommandHandler ..> IHangFireService : <<inject>>
'=====INJECT
@enduml