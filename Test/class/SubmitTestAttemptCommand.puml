@startuml
title Test | SubmitTestAttemptCommand
'=====================DEFINE========================
!define TEST_SERVICE_TRYCHECKCANATTEMPTTEST
'=====================IMPORT========================
!include ../../GlobalSettings.puml
!include ../../common/Mediatr.puml
!include ../../common/EndpointClasses.puml
!include ../../common/IApplicationDbContext.puml
!include ../Service/ITestService.puml
!include ../../common/service/IUser.puml
!include ../../common/service/IHangFireService.puml
!include ../Dto/TestResultDto.puml
!include ../Dto/UserAnswerDto.puml
'=====================COMMAND========================
class SubmitTestAttemptCommand {
    + AttemptId : Guid
    + UserAnswers : List<UserAnswerDto>
    + IsSubmit : bool
}

class SubmitTestAttemptCommandHandler {
    -  _context : IApplicationDbContext
    -  _testService : ITestService
    -  _user : IUser
    -  _hangFireService : IHangFireService
    + SubmitTestAttemptCommandHandler(context:IApplicationDbContext, testService:ITestService, user:IUser, hangFireService:IHangFireService)
    +  Handle(request:SubmitTestAttemptCommand, cancellationToken:CancellationToken) : Task<TestResultDto>
}

'=====================ENDPOINT========================
class TestEndpoints  {
    +  SubmitTestAttempt(userAnswer:SubmitTestAttemptCommand, sender:ISender) : Task<Ok<ApiResponse<TestResultDto>>>
}
'=====================RELATIONSHIP========================
!include zCommon.puml
SubmitTestAttemptCommand ..|> IRequest : <<implements>>
SubmitTestAttemptCommandHandler ..> SubmitTestAttemptCommand :  <<uses>>
TestEndpoints ..> SubmitTestAttemptCommand : <<uses>>
SubmitTestAttemptCommandHandler ..|> IRequestHandler : <<implements>>
SubmitTestAttemptCommandHandler ..> TestResultDto : <<uses>>
SubmitTestAttemptCommandHandler ..> UserAnswerDto : <<uses>>

'=====INJECT
SubmitTestAttemptCommandHandler ..> IApplicationDbContext : <<inject>>
SubmitTestAttemptCommandHandler ..> ITestService : <<inject>>
SubmitTestAttemptCommandHandler ..> IUser : <<inject>>
SubmitTestAttemptCommandHandler ..> IHangFireService : <<inject>>
'=====INJECT
@enduml