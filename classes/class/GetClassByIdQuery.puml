@startuml
title Class | GetClassByIdQuery
'=====================DEFINE========================

'=====================IMPORT========================
!include ../../GlobalSettings.puml
!include ../../common/Mediatr.puml
!include ../../common/EndpointClasses.puml
!include ../../common/IApplicationDbContext.puml
!include ../Service/IClassService.puml
'=====================QUERY========================
class ClassDetailDto {
    + ClassId : Guid
    + Name : string?
    + Topic : string?
}

class GetClassByIdQuery {
    + ClassId : Guid <<get>> <<set>>
}

class GetClassByIdQueryHandler {
    - <<readonly>> _context : IApplicationDbContext
    - <<readonly>> _classService : IClassService
    + GetClassByIdQueryHandler(context:IApplicationDbContext, classService:IClassService)
    + <<async>> Handle(request:GetClassByIdQuery, cancellationToken:CancellationToken) : Task<ClassDetailDto>
}

'=====================ENDPOINT========================
class ClassEndpoints  {
    + <<async>> GetClassById(classId:Guid, sender:ISender) : Task<Ok<ApiResponse<ClassDetailDto>>>
}
'=====================RELATIONSHIP========================
!include zCommon.puml
GetClassByIdQuery ..|> IRequest : <<implements>>
GetClassByIdQueryHandler ..> GetClassByIdQuery :  <<uses>>
ClassEndpoints ..> GetClassByIdQuery : <<uses>>
GetClassByIdQueryHandler ..|> IRequestHandler : <<implements>>
GetClassByIdQueryHandler ..> ClassDetailDto : <<uses>>

'=====INJECT
GetClassByIdQueryHandler ..> IApplicationDbContext : <<inject>>
GetClassByIdQueryHandler ..> IClassService : <<inject>>
'=====INJECT
@enduml