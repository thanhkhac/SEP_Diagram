@startuml
top to bottom direction
skinparam wrapWidth 200

'=====================DEFINE========================
'=====================IMPORT========================
!include ../../GlobalSettings.puml
!include ../../common/Mediatr.puml
!include ../../common/EndpointClasses.puml
!include ../../common/IApplicationDbContext.puml
!include ../../common/service/IUser.puml
'=====================COMMAND========================

class DocumentStructureDto {
    + Title : string
    + Children : List<DocumentStructureDto>
}

GenerateQuestionWithAiCommand --> DocumentStructureDto : DocumentStructure
GenerateQuestionWithAiCommand --> DocumentStructureDto : SelectedParts


DocumentStructureDto o--  DocumentStructureDto : Children

class GenerateQuestionWithAiCommand {
    + FileData : FileStreamData
    + IsGenerateExplain : bool
    + Language : string
    + QuestionCount : int
    + QuestionTypes : List<string>
    + DocumentStructure : DocumentStructureDto
    + SelectedParts : DocumentStructureDto
}


class GenerateQuestionWithAiForm {
    + File : IFormFile
    + IsGenerateExplain : bool
    + Language : string
    + QuestionCount : int
    + QuestionTypes : List<string>
    + DocumentStructureJson : string
    + SelectedPartJson : string
    + DocumentStructure : DocumentStructureDto
    + SelectedPart : DocumentStructureDto
}

class GenerateQuestionWithAiCommandHandler {
    -  _context : IApplicationDbContext
    -  _aiGenerateService : IAiGenerateService
    -  _user : IUser
    + GenerateQuestionWithAiCommandHandler(context:IApplicationDbContext, aiGenerateService:IAiGenerateService, user:IUser)
    +  Handle(request:GenerateDocumentStructureCommand, cancellationToken:CancellationToken) : Task<Guid>
}

interface IAiGenerateService {
    + SendPromptWithFileAsync(fileUri: string, systemInstruction: string, prompt: string, temperature: double = 0, topP: double = 1, cancellationToken: CancellationToken) : Task<string>
    + SendPromptAsync(systemInstruction: string, prompt: string, temperature: double = 0, topP: double = 1, cancellationToken: CancellationToken) : Task<string>
    + CountTokenWithFileAsync(fileUri: string, systemInstruction: string, prompt: string, cancellationToken: CancellationToken) : Task<int>
    + CountToken(text1: string, text2: string, cancellationToken: CancellationToken) : Task<int>
    + UploadFileAsync(fileData: FileStreamData, cancellationToken: CancellationToken) : Task<(string FileUri, string FileName)>
    + DeleteFileAsync(fileName: string) : Task
}
'=====================ENDPOINT========================
class AiGenerateEndpoints  {
    +  AddQuestionSet(file:IFormFile, sender:ISender) : Task<Ok<ApiResponse<Guid>>>
}
'=====================RELATIONSHIP========================
!include zCommon.puml
GenerateQuestionWithAiCommand ..|> IRequest : <<implements>>
GenerateQuestionWithAiCommandHandler ..> GenerateQuestionWithAiCommand :  <<uses>>
AiGenerateEndpoints ..> GenerateQuestionWithAiCommand : <<uses>>
GenerateQuestionWithAiCommandHandler ..|> IRequestHandler : <<implements>>
GenerateQuestionWithAiCommandHandler ..> DocumentStructureDto: <<uses>>

AiGenerateEndpoints ..> GenerateQuestionWithAiForm : <<uses>>

'=====INJECT
GenerateQuestionWithAiCommandHandler ..> IApplicationDbContext : <<inject>>
GenerateQuestionWithAiCommandHandler ..> IAiGenerateService : <<inject>>
GenerateQuestionWithAiCommandHandler ..> IUser : <<inject>>
'=====INJECT
@enduml