@startuml
interface IRequest<T>
interface IRequestHandler<C, R>
interface IIdentityService
interface IUserManager

class UI

class AuthEndpoint {
    +RefreshToken(command: RefreshTokenCommand): TokenDto
}

class RefreshTokenHandler {
    +Handle(command: RefreshTokenCommand): TokenDto
}
RefreshTokenHandler ..|> IRequestHandler

class RefreshTokenCommand {
    +AccessToken: string
    +RefreshToken: string
}
RefreshTokenCommand ..|> IRequest

class IdentityService {
    +RefreshTokenAsync(accessToken: string, refreshToken: string): TokenDto
}
IdentityService ..|> IIdentityService

class UserManager {
    +FindByIdAsync(userId: Guid): User
}
UserManager ..|> IUserManager

class User {
    +Id: Guid
    +Email: string
    +IsDeleted: bool
    +IsBanned: bool
}

class TokenDto {
    +AccessToken: string
    +RefreshToken: string
    +ExpireMin: int
}

class Result {
    +Success: bool
    +Errors: Dictionary<string, string[]>
}

class Database

UI --> AuthEndpoint
AuthEndpoint --> RefreshTokenHandler
RefreshTokenHandler --> RefreshTokenCommand
RefreshTokenHandler --> IdentityService
IdentityService --> UserManager
UserManager --> User
IdentityService --> TokenDto
IdentityService --> Database
@enduml