@startuml
interface IRequest<T>
interface IRequestHandler<C, R>
interface IIdentityService
interface IUserManager

class UI

class AuthEndpoint {
    +Login(command: LoginCommand): TokenDto
}

class LoginHandler {
    +Handle(command: LoginCommand): TokenDto
}
LoginHandler ..|> IRequestHandler

class LoginCommand {
    +Email: string
    +Password: string
}
LoginCommand ..|> IRequest

class IdentityService {
    +TryLoginAsync(email: string, password: string): TokenDto
}
IdentityService ..|> IIdentityService

class UserManager {
    +FindByEmailAsync(email: string): User
    +CheckPasswordSignInAsync(user: User, password: string): bool
}
UserManager ..|> IUserManager

class User {
    +Id: Guid
    +Email: string
    +PasswordHash: string
    +IsDeleted: bool
    +IsBanned: bool
}

class TokenDto {
    +AccessToken: string
    +RefreshToken: string
    +ExpireMin: int
}

class Result {
    +Success: bool
    +Errors: Dictionary<string, string[]>
}

class Database

UI --> AuthEndpoint
AuthEndpoint --> LoginHandler
LoginHandler --> LoginCommand
LoginHandler --> IdentityService
IdentityService --> UserManager
UserManager --> User
UserManager --> Database
IdentityService --> TokenDto
@enduml