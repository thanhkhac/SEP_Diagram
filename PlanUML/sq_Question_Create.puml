@startuml
title Sequence Diagram - CreateQuestionSet 

actor User
participant CreateQuestionSetUi as UI
participant AiGenerateEndpoint as AiEndpoint
participant QuestionSetEndpoint as QsEndpoint
participant AiGenerateDocumentStructureHandler
participant AiGenerateQuestionSetHandler
participant IAiService
participant CreateQuestionSetCommandHandler
participant IApplicationDbContext
database Database

== Enter Information ==
User -> UI: Click "Create Question Set"
UI --> User: Display input form
User -> UI: Enter Name, Description

== Option: AI ==
opt User selects "Use AI"
    User -> UI: Submit file for outline generation
    UI -> AiEndpoint: GenerateOutline(GenerateOutlineCommand)
    AiEndpoint -> AiGenerateDocumentStructureHandler: Handle(GenerateOutlineCommand)
    AiGenerateDocumentStructureHandler -> IApplicationDbContext: Check user token availability
    alt Insufficient tokens
        IApplicationDbContext --> AiGenerateDocumentStructureHandler:  Throw ErrorCodeException(InsufficientToken)
        AiGenerateDocumentStructureHandler --> AiEndpoint: Throw ErrorCodeException(InsufficientToken)
        AiEndpoint --> UI: Return error response
        UI --> User: Show error message "Insufficient tokens"
    else Sufficient tokens
        AiGenerateDocumentStructureHandler -> IAiService: GenerateOutline(inputText)
        IAiService --> AiGenerateDocumentStructureHandler: Return Outline
        AiGenerateDocumentStructureHandler --> AiEndpoint: Return Outline
        AiEndpoint --> UI: Display Outline
        User -> UI: Select topics for question generation
        UI -> AiEndpoint: GenerateQuestions(GenerateQuestionCommand)
        AiEndpoint -> AiGenerateQuestionSetHandler: Handle(GenerateQuestionCommand)
        AiGenerateQuestionSetHandler -> IAiService: GenerateQuestions(selectedOutline)
        IAiService --> AiGenerateQuestionSetHandler: Return QuestionList
        AiGenerateQuestionSetHandler --> AiEndpoint: Return QuestionList
        AiEndpoint --> UI: Display AI-generated questions
    end
end

== Manual Input/Editing ==
User -> UI: Edit AI-generated questions / Add new questions / Delete questions
UI --> User: Update question list preview

== Create Question Set ==
User -> UI: Submit final Question Set
UI -> QsEndpoint: CreateQuestionSet(CreateQuestionSetCommand)
QsEndpoint -> CreateQuestionSetCommandHandler: Handle(CreateQuestionSetCommand)
CreateQuestionSetCommandHandler -> IApplicationDbContext: SaveChangesAsync()
IApplicationDbContext -> Database: INSERT QuestionSet, Questions, and related data
Database --> IApplicationDbContext: Confirm success
IApplicationDbContext --> CreateQuestionSetCommandHandler: Return success
CreateQuestionSetCommandHandler --> QsEndpoint: Return QuestionSet ID
QsEndpoint --> UI: Return success response with QuestionSet ID
UI --> User: Redirect to QuestionSet detail page

@enduml