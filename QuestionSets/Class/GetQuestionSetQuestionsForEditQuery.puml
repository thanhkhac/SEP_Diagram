@startuml

'=====================DEFINE========================
!define QUESTIONSET_SERVICE_CANUSEREDIT
'=====================IMPORT========================
!include ../../GlobalSettings.puml
!include ../../common/Mediatr.puml
!include ../../common/EndpointClasses.puml
!include ../../common/service/IUser.puml
!include ../Services/IQuestionSetService.puml
!include ../dtos/CreateUpdateQuestionDto.puml
'=====================COMMAND========================
class GetQuestionSetQuestionsForEditQuery {
    + QuestionSetId : Guid
}
class GetQuestionSetQuestionsForEditQueryHandler {
    -  _questionSetService : IQuestionSetService
    -  _user : IUser
    + GetQuestionSetQuestionsForEditQueryHandler(questionSetService:IQuestionSetService, user:IUser, planService:IPlanService)
    +  Handle(request:GetQuestionSetQuestionsForEditQuery, cancellationToken:CancellationToken) : Task<List<CreateUpdateQuestionDto>>
}

'=====================ENDPOINT========================
class QuestionSetEndpoints  {
    +  GetQuestionsForEdit(questionSetId:Guid, sender:ISender) : Task<Ok<ApiResponse<List<CreateUpdateQuestionDto>>>>
}
'=====================RELATIONSHIP========================
!include zCommon.puml
GetQuestionSetQuestionsForEditQuery ..|> IRequest : <<implements>>
GetQuestionSetQuestionsForEditQueryHandler ..> GetQuestionSetQuestionsForEditQuery :  <<uses>>
QuestionSetEndpoints ..> GetQuestionSetQuestionsForEditQuery : <<uses>>
GetQuestionSetQuestionsForEditQueryHandler ..|> IRequestHandler : <<implements>>

'=====INJECT
GetQuestionSetQuestionsForEditQueryHandler ..> IQuestionSetService : <<inject>>
GetQuestionSetQuestionsForEditQueryHandler ..> IUser : <<inject>>
'=====INJECT
GetQuestionSetQuestionsForEditQueryHandler --* CreateUpdateQuestionDto
@enduml