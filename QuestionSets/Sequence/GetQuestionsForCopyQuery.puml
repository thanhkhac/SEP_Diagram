@startuml
actor User
participant "Question Set Copy/Import UI" as UI <<UI>>
participant ":QuestionSetEndpoints" as QuestionSetEndpoints <<Controller>>
participant ":GetQuestionSetQuestionsForCopyQueryHandler" as GetQuestionSetQuestionsForCopyQueryHandler <<Handler>>
participant ":QuestionSetService" as QuestionSetService <<Service>>
participant ":PlanService" as PlanService <<Service>>
participant ":ApplicationDbContext" as ApplicationDbContext <<DbContext>>
participant Database

note right of GetQuestionSetQuestionsForCopyQueryHandler
  Managed by MediatR
end note

note right of QuestionSetService
  Managed by IoC
end note

note right of PlanService
  Managed by IoC
end note

note right of ApplicationDbContext
  Managed by IoC
end note

User -> UI : Request questions for copy/import
activate UI
UI -> QuestionSetEndpoints : GET /api/QuestionSet/{questionSetId}/QuestionsForCopy
activate QuestionSetEndpoints
QuestionSetEndpoints -> GetQuestionSetQuestionsForCopyQueryHandler : Handle(GetQuestionSetQuestionsForCopyQuery)
deactivate QuestionSetEndpoints
activate GetQuestionSetQuestionsForCopyQueryHandler
GetQuestionSetQuestionsForCopyQueryHandler -> QuestionSetService : GetActiveQuestionSet(questionSetId)
deactivate GetQuestionSetQuestionsForCopyQueryHandler
activate QuestionSetService
QuestionSetService -> ApplicationDbContext : Query QuestionSet
deactivate QuestionSetService
activate ApplicationDbContext
ApplicationDbContext -> Database : Query QuestionSet
deactivate ApplicationDbContext
activate Database
Database --> ApplicationDbContext : QuestionSet
deactivate Database
activate ApplicationDbContext
ApplicationDbContext --> QuestionSetService : QuestionSet
deactivate ApplicationDbContext
activate QuestionSetService
QuestionSetService --> GetQuestionSetQuestionsForCopyQueryHandler : QuestionSet
deactivate QuestionSetService
activate GetQuestionSetQuestionsForCopyQueryHandler
alt Question Set Not Found
    GetQuestionSetQuestionsForCopyQueryHandler -> QuestionSetEndpoints : Error: QUESTION_SET_NOT_FOUND
    deactivate GetQuestionSetQuestionsForCopyQueryHandler
    activate QuestionSetEndpoints
    QuestionSetEndpoints --> UI : 400 Bad Request { "error": "QUESTION_SET_NOT_FOUND" }
    deactivate QuestionSetEndpoints
    UI -> User : Display error: Question set not found
else Question Set Found
    activate GetQuestionSetQuestionsForCopyQueryHandler
    GetQuestionSetQuestionsForCopyQueryHandler -> QuestionSetService : CanUserEditQuestionSet(userId, questionSetId)
    deactivate GetQuestionSetQuestionsForCopyQueryHandler
    activate QuestionSetService
    QuestionSetService -> ApplicationDbContext : Query Permission
    deactivate QuestionSetService
    activate ApplicationDbContext
    ApplicationDbContext -> Database : Query Permission
    deactivate ApplicationDbContext
    activate Database
    Database --> ApplicationDbContext : Permission
    deactivate Database
    activate ApplicationDbContext
    ApplicationDbContext --> QuestionSetService : Permission
    deactivate ApplicationDbContext
    activate QuestionSetService
    QuestionSetService --> GetQuestionSetQuestionsForCopyQueryHandler : bool
    deactivate QuestionSetService
    activate GetQuestionSetQuestionsForCopyQueryHandler
    alt No permission
        GetQuestionSetQuestionsForCopyQueryHandler -> QuestionSetEndpoints : Error: COMMON_FORBIDDEN
        deactivate GetQuestionSetQuestionsForCopyQueryHandler
        activate QuestionSetEndpoints
        QuestionSetEndpoints --> UI : 400 Bad Request { "error": "COMMON_FORBIDDEN" }
        deactivate QuestionSetEndpoints
        UI -> User : Display error: You are not allowed to view this question set
    else Allowed
        activate GetQuestionSetQuestionsForCopyQueryHandler
        GetQuestionSetQuestionsForCopyQueryHandler -> PlanService : CanCopyOrImportQuestionSet(userId)
        deactivate GetQuestionSetQuestionsForCopyQueryHandler
        activate PlanService
        PlanService -> ApplicationDbContext : Query UserSubscription
        deactivate PlanService
        activate ApplicationDbContext
        ApplicationDbContext -> Database : Query UserSubscription
        deactivate ApplicationDbContext
        activate Database
        Database --> ApplicationDbContext : List<UserSubscription>
        deactivate Database
        activate ApplicationDbContext
        ApplicationDbContext --> PlanService : List<UserSubscription>
        deactivate ApplicationDbContext
        activate PlanService
        PlanService --> GetQuestionSetQuestionsForCopyQueryHandler : bool
        deactivate PlanService
        activate GetQuestionSetQuestionsForCopyQueryHandler
        alt Plan Required
            GetQuestionSetQuestionsForCopyQueryHandler -> QuestionSetEndpoints : Error: PLAN_REQUIRE_PLAN
            deactivate GetQuestionSetQuestionsForCopyQueryHandler
            activate QuestionSetEndpoints
            QuestionSetEndpoints --> UI : 400 Bad Request { "error": "PLAN_REQUIRE_PLAN" }
            deactivate QuestionSetEndpoints
            UI -> User : Display error: Please buy a plan to copy or import question set
        else Plan Available
            activate GetQuestionSetQuestionsForCopyQueryHandler
            GetQuestionSetQuestionsForCopyQueryHandler -> ApplicationDbContext : Query Questions by QuestionSetId
            deactivate GetQuestionSetQuestionsForCopyQueryHandler
            activate ApplicationDbContext
            ApplicationDbContext -> Database : Query Questions
            deactivate ApplicationDbContext
            activate Database
            Database --> ApplicationDbContext : List<Question>
            deactivate Database
            activate ApplicationDbContext
            ApplicationDbContext --> GetQuestionSetQuestionsForCopyQueryHandler : List<Question>
            deactivate ApplicationDbContext
            activate GetQuestionSetQuestionsForCopyQueryHandler
            GetQuestionSetQuestionsForCopyQueryHandler -> QuestionSetEndpoints : List<CreateUpdateQuestionDto>
            deactivate GetQuestionSetQuestionsForCopyQueryHandler
            activate QuestionSetEndpoints
            QuestionSetEndpoints --> UI : 200 OK (ApiResponse<List<CreateUpdateQuestionDto>>)
            deactivate QuestionSetEndpoints
            UI -> User : Show questions for copy/import
        end
    end
end
deactivate UI

@enduml