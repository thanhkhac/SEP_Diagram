@startuml
actor User
participant "Question Set Detail UI" as UI <<UI>>
participant ":QuestionSetEndpoints" as QuestionSetEndpoints <<Controller>>
participant ":GetQuestionSetDetailQueryHandler" as GetQuestionSetDetailQueryHandler <<Handler>>
participant ":QuestionSetService" as QuestionSetService <<Service>>
participant ":ApplicationDbContext" as ApplicationDbContext <<DbContext>>
participant Database

note right of GetQuestionSetDetailQueryHandler
  Managed by MediatR
end note

note right of QuestionSetService
  Managed by IoC
end note

note right of ApplicationDbContext
  Managed by IoC
end note

User -> UI : Open question set detail
activate UI
UI -> QuestionSetEndpoints : GET /api/QuestionSet/{id}
activate QuestionSetEndpoints
QuestionSetEndpoints -> GetQuestionSetDetailQueryHandler : Handle(GetQuestionSetDetailQuery)
deactivate QuestionSetEndpoints
activate GetQuestionSetDetailQueryHandler
GetQuestionSetDetailQueryHandler -> QuestionSetService : GetActiveQuestionSet(questionSetId)
deactivate GetQuestionSetDetailQueryHandler
activate QuestionSetService
QuestionSetService -> ApplicationDbContext : Query QuestionSet
deactivate QuestionSetService
activate ApplicationDbContext
ApplicationDbContext -> Database : Query QuestionSet
deactivate ApplicationDbContext
activate Database
Database --> ApplicationDbContext : QuestionSet
deactivate Database
activate ApplicationDbContext
ApplicationDbContext --> QuestionSetService : QuestionSet
deactivate ApplicationDbContext
activate QuestionSetService
QuestionSetService --> GetQuestionSetDetailQueryHandler : QuestionSet
deactivate QuestionSetService
activate GetQuestionSetDetailQueryHandler
alt Not found
    GetQuestionSetDetailQueryHandler -> QuestionSetEndpoints : Error: QUESTION_SET_NOT_FOUND
    deactivate GetQuestionSetDetailQueryHandler
    activate QuestionSetEndpoints
    QuestionSetEndpoints --> UI : 400 Bad Request { "error": "QUESTION_SET_NOT_FOUND" }
    deactivate QuestionSetEndpoints
    UI -> User : Display error: Question set not found
else Found
    activate GetQuestionSetDetailQueryHandler
    GetQuestionSetDetailQueryHandler -> QuestionSetService : CanUserViewQuestionSet(userId, questionSet)
    deactivate GetQuestionSetDetailQueryHandler
    activate QuestionSetService
    QuestionSetService -> ApplicationDbContext : Query Permission
    deactivate QuestionSetService
    activate ApplicationDbContext
    ApplicationDbContext -> Database : Query Permission
    deactivate ApplicationDbContext
    activate Database
    Database --> ApplicationDbContext : Permission
    deactivate Database
    activate ApplicationDbContext
    ApplicationDbContext --> QuestionSetService : Permission
    deactivate ApplicationDbContext
    activate QuestionSetService
    QuestionSetService --> GetQuestionSetDetailQueryHandler : bool
    deactivate QuestionSetService
    activate GetQuestionSetDetailQueryHandler
    alt No permission
        GetQuestionSetDetailQueryHandler -> QuestionSetEndpoints : Error: COMMON_FORBIDDEN
        deactivate GetQuestionSetDetailQueryHandler
        activate QuestionSetEndpoints
        QuestionSetEndpoints --> UI : 400 Bad Request { "error": "COMMON_FORBIDDEN" }
        deactivate QuestionSetEndpoints
        UI -> User : Display error: No permission
    else Allowed
        activate GetQuestionSetDetailQueryHandler
        GetQuestionSetDetailQueryHandler -> QuestionSetEndpoints : QuestionSetDetailDto
        deactivate GetQuestionSetDetailQueryHandler
        activate QuestionSetEndpoints
        QuestionSetEndpoints --> UI : 200 OK (ApiResponse<QuestionSetDetailDto>)
        deactivate QuestionSetEndpoints
        UI -> User : Show question set detail
    end
end
deactivate UI

@enduml