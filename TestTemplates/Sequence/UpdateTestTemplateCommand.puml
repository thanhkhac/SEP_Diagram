@startuml
actor User
participant "Edit Test Template UI" as UI <<UI>>
participant ":TestTemplateEndpoints" as TestTemplateEndpoints <<Controller>>
participant ":UpdateTestTemplateCommandHandler" as UpdateTestTemplateCommandHandler <<Handler>>
participant ":TestTemplateService" as TestTemplateService <<Service>>
participant ":ApplicationDbContext" as ApplicationDbContext <<DbContext>>
participant Database

note right of UpdateTestTemplateCommandHandler
  Managed by MediatR
end note

note right of TestTemplateService
  Managed by IoC
end note

note right of ApplicationDbContext
  Managed by IoC
end note

User -> UI : Edit info, update questions, click "Save"
activate UI
UI -> TestTemplateEndpoints : PATCH /api/TestTemplate/{TestTemplateId}
activate TestTemplateEndpoints
TestTemplateEndpoints -> UpdateTestTemplateCommandHandler : Handle(UpdateTestTemplateCommand)
deactivate TestTemplateEndpoints
activate UpdateTestTemplateCommandHandler
UpdateTestTemplateCommandHandler -> ApplicationDbContext : Query TestTemplate by TestTemplateId
deactivate UpdateTestTemplateCommandHandler
activate ApplicationDbContext
ApplicationDbContext -> Database : Query TestTemplate
deactivate ApplicationDbContext
activate Database
Database --> ApplicationDbContext : TestTemplate
deactivate Database
activate ApplicationDbContext
ApplicationDbContext --> UpdateTestTemplateCommandHandler : TestTemplate
deactivate ApplicationDbContext
activate UpdateTestTemplateCommandHandler
alt Test Template Not Found
    UpdateTestTemplateCommandHandler -> TestTemplateEndpoints : Error: TEST_TEMPLATE_NOT_FOUND
    deactivate UpdateTestTemplateCommandHandler
    activate TestTemplateEndpoints
    TestTemplateEndpoints --> UI : 400 Bad Request { "error": "TEST_TEMPLATE_NOT_FOUND" }
    deactivate TestTemplateEndpoints
    UI -> User : Display error: Test template not found
else Test Template Found
    activate UpdateTestTemplateCommandHandler
    UpdateTestTemplateCommandHandler -> TestTemplateService : CanEditTestTemplate(testTemplateId)
    deactivate UpdateTestTemplateCommandHandler
    activate TestTemplateService
    TestTemplateService -> ApplicationDbContext : Query Permission
    deactivate TestTemplateService
    activate ApplicationDbContext
    ApplicationDbContext -> Database : Query Permission
    deactivate ApplicationDbContext
    activate Database
    Database --> ApplicationDbContext : Permission
    deactivate Database
    activate ApplicationDbContext
    ApplicationDbContext --> TestTemplateService : Permission
    deactivate ApplicationDbContext
    activate TestTemplateService
    TestTemplateService --> UpdateTestTemplateCommandHandler : bool
    deactivate TestTemplateService
    activate UpdateTestTemplateCommandHandler
    alt No permission
        UpdateTestTemplateCommandHandler -> TestTemplateEndpoints : Error: USER_NOT_HAVE_PERMISSION_IN_TEST_TEMPLATE
        deactivate UpdateTestTemplateCommandHandler
        activate TestTemplateEndpoints
        TestTemplateEndpoints --> UI : 400 Bad Request { "error": "USER_NOT_HAVE_PERMISSION_IN_TEST_TEMPLATE" }
        deactivate TestTemplateEndpoints
        UI -> User : Display error: User does not have permission to edit this test template
    else Allowed
        activate UpdateTestTemplateCommandHandler
        UpdateTestTemplateCommandHandler -> ApplicationDbContext : Update TestTemplate Name
        deactivate UpdateTestTemplateCommandHandler
        activate ApplicationDbContext
        ApplicationDbContext -> Database : Update TestTemplate
        deactivate ApplicationDbContext
        activate Database
        Database --> ApplicationDbContext : Success
        deactivate Database
        activate ApplicationDbContext
        deactivate ApplicationDbContext
        activate UpdateTestTemplateCommandHandler
        UpdateTestTemplateCommandHandler -> ApplicationDbContext : Query existing TestTemplateQuestions (Include Questions)
        deactivate UpdateTestTemplateCommandHandler
        activate ApplicationDbContext
        ApplicationDbContext -> Database : Query TestTemplateQuestions, Questions
        deactivate ApplicationDbContext
        activate Database
        Database --> ApplicationDbContext : List<TestTemplateQuestion>, List<Question>
        deactivate Database
        activate ApplicationDbContext
        ApplicationDbContext --> UpdateTestTemplateCommandHandler : List<TestTemplateQuestion>, List<Question>
        deactivate ApplicationDbContext
        activate UpdateTestTemplateCommandHandler
        UpdateTestTemplateCommandHandler -> UpdateTestTemplateCommandHandler : Filter questions to update/create/delete
        UpdateTestTemplateCommandHandler -> TestTemplateService : TryCheckQuestionAccessForTestTemplate(newQuestionsFromQuestionSet)
        deactivate UpdateTestTemplateCommandHandler
        activate TestTemplateService
        TestTemplateService --> UpdateTestTemplateCommandHandler : Success/Error
        deactivate TestTemplateService
        activate UpdateTestTemplateCommandHandler
        alt Question Access Denied
            UpdateTestTemplateCommandHandler -> TestTemplateEndpoints : Error: QUESTION_NOT_HAVE_ACCESS
            deactivate UpdateTestTemplateCommandHandler
            activate TestTemplateEndpoints
            TestTemplateEndpoints --> UI : 400 Bad Request { "error": "QUESTION_NOT_HAVE_ACCESS" }
            deactivate TestTemplateEndpoints
            UI -> User : Display error: Some new questions are not accessible or invalid
        else Question Access Granted
            activate UpdateTestTemplateCommandHandler
            UpdateTestTemplateCommandHandler -> TestTemplateService : CheckQuestionsForUpdate(questionsToUpdate, existingQuestions)
            deactivate UpdateTestTemplateCommandHandler
            activate TestTemplateService
            TestTemplateService --> UpdateTestTemplateCommandHandler : CheckUpdateQuestion (UpdateQuestionIds, NotUpdateQuestionIds)
            deactivate TestTemplateService
            activate UpdateTestTemplateCommandHandler
            UpdateTestTemplateCommandHandler -> ApplicationDbContext : Add new Questions and TestTemplateQuestions, Remove deleted/updated TestTemplateQuestions
            deactivate UpdateTestTemplateCommandHandler
            activate ApplicationDbContext
            ApplicationDbContext -> Database : Insert/Update/Delete Questions, TestTemplateQuestions
            deactivate ApplicationDbContext
            activate Database
            Database --> ApplicationDbContext : Success
            deactivate Database
            activate ApplicationDbContext
            ApplicationDbContext --> UpdateTestTemplateCommandHandler : Guid
            deactivate ApplicationDbContext
            activate UpdateTestTemplateCommandHandler
            UpdateTestTemplateCommandHandler -> TestTemplateEndpoints : Guid
            deactivate UpdateTestTemplateCommandHandler
            activate TestTemplateEndpoints
            TestTemplateEndpoints --> UI : 200 OK (ApiResponse<Guid>)
            deactivate TestTemplateEndpoints
            UI -> User : Display info: Test template updated successfully
        end
    end
end
deactivate UI

@enduml